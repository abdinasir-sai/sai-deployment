replicaCount: 1
image:
  repository: registry.visionwaves.com/greengpt-ui
  pullPolicy: Always
  tag: newTagValue
imagePullSecrets: []
nameOverride: ''
fullnameOverride: ''
serviceAccount:
  create: true
  annotations: {}
  name: 'sai-sv-account'
podAnnotations:
  prometheus.io/scrape: 'true'
  prometheus.io/path: /metrics
  prometheus.io/scheme: http
  prometheus.io/port: '9113'
podSecurityContext: {}
securityContext: {}
service:
  type: ClusterIP
  name: greengpt-ui
  port: 80
  targetPort: 8081
ingress:
  enabled: false
  annotations:
    kubernetes.io/ingress.class: nginx
  hosts:
  - host: null
    paths:
    - /greengpt
  tls: []
virtualService:
  enabled: true
  context: /greengpt
  rewriteForSlash: false
env: null
resourcesLimits:
  cpu: 200m
  memory: 400M
requestsResources:
  cpu: 10m
  memory: 100M
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80
nodeSelector: {}
tolerations: []
affinity: {}
livenessProbe:
  path: /nginx_status
  initialDelaySeconds: 80
  periodSeconds: 20
  failureThreshold: 3
readinessProbe:
  path: /nginx_status
  initialDelaySeconds: 30
  periodSeconds: 10
ports:
  containerPort: 8081
gateway:
  enabled: false
  name: ingressgateway
gatewayServers:
  portNumber: 80
  portName: http
  portProtocol: HTTP
  hosts: '"*"'
configMap:
  createIndexhtmlConfigmap: false
  createkeycloakContextConfigmap: false
  createNginxconfConfigmap: true
  defaultMode: '0755'
volumeMounts:
  nginxConfPath: /etc/nginx/nginx.conf
  nginxConfsubPath: nginx.conf
nfs: null
volumes: null
exporter:
  enable: false
  name: nginx-exporter
  image:
    repository: nginx/nginx-prometheus-exporter
    pullPolicy: Always
    tag: 0.10.0
  env:
    SCRAPE_URI: http://localhost:8081/nginx_status
    NGINX_RETRIES: '10'
    TELEMETRY_PATH: /metrics
  ports:
    containerPort: 9113
  resources:
    requests:
      memory: 100M
      cpu: 10m
    limits:
      memory: 200Mi
      cpu: 20m
